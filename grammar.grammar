
smallc_program ::= type_specifier id ‘(‘ param_decl_list ‘)’ compound_stmt
Type_specifier ::= int | char
Param_decl_list ::= parameter_decl (‘,’ parameter_decl )*
Param_decl ::= type_specifier id
Compound_stmt ::= ‘{‘ (var_decl* stmt*)? ‘}’
Var_decl ::= type_specifier var_decl_list ‘;’
Var_decl_list ::= variable_id ( ‘,’ variable_id)*
Variable_id ::= id ( ‘=’ expr )?
Stmt ::= compound_stmt | cond_stmt | while_stmt | break ‘;’ | continue ‘;’ | return expr ‘;’ | readint ‘(‘ id ‘)’ ‘;’ |
 writeint ‘(‘ expr ‘)’ ‘;’
Cond_stmt ::= if ‘(‘ expr ‘)’ stmt (else stmt)?
While_stmt ::= while ‘(‘ expr ‘)’ stmt
Expr ::= id ‘=’ expr | condition
Condition ::= disjunction | disjunction ‘?’ expr ‘:’ condition
Disjunction ::= conjunction | disjunction ‘||’ conjunction
Conjunction ::= comparison | conjunction ‘&&’ comparison
Comparison ::= relation | relation ‘==’ relation
Relation ::= sum | sum (‘<’ | ‘>’) sum
Sum ::= sum ‘+’ term | sum ‘-’ term | term
Term ::= term ‘*’ factor | term ‘/’ factor | term ‘%’ factor | factor
Factor ::= ‘!’ factor | ‘-’ factor | primary
Primary ::= num | charconst | id | ‘(‘ expr ‘)’